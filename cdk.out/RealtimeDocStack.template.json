{
 "Resources": {
  "DocumentsTable7E808EE5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/DocumentsTable/Resource"
   }
  },
  "RealtimeDocAPIApiLogsRole705EC833": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/ApiLogsRole/Resource"
   }
  },
  "RealtimeDocAPIB67C1404": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "API_KEY",
    "LogConfig": {
     "CloudWatchLogsRoleArn": {
      "Fn::GetAtt": [
       "RealtimeDocAPIApiLogsRole705EC833",
       "Arn"
      ]
     },
     "FieldLogLevel": "ALL"
    },
    "Name": "RealtimeDocumentAPI"
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/Resource"
   }
  },
  "RealtimeDocAPISchema6D1E407F": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "Definition": "type Document {\n  id: ID!\n  content: String!\n  updatedAt: AWSDateTime!\n}\n\ntype Query {\n  getDocument(id: ID!): Document\n}\n\ntype Mutation {\n  updateDocument(id: ID!, content: String!): Document\n}\n\ntype Subscription {\n  onUpdateDocument(id: ID!): Document\n    @aws_subscribe(mutations: [\"updateDocument\"])\n}\n\n"
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/Schema"
   }
  },
  "RealtimeDocAPIDefaultApiKey6EAA451F": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "Expires": 1778058049
   },
   "DependsOn": [
    "RealtimeDocAPISchema6D1E407F"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/DefaultApiKey"
   }
  },
  "RealtimeDocAPILogRetentionD7AEB28D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/appsync/apis/",
       {
        "Fn::GetAtt": [
         "RealtimeDocAPIB67C1404",
         "ApiId"
        ]
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/LogRetention/Resource"
   }
  },
  "RealtimeDocAPIGetDSServiceRole1BFF7FB7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/GetDS/ServiceRole/Resource"
   }
  },
  "RealtimeDocAPIGetDSServiceRoleDefaultPolicy802AC00D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GetDocumentFn1790F1C2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GetDocumentFn1790F1C2",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RealtimeDocAPIGetDSServiceRoleDefaultPolicy802AC00D",
    "Roles": [
     {
      "Ref": "RealtimeDocAPIGetDSServiceRole1BFF7FB7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/GetDS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RealtimeDocAPIGetDS96DD6147": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "GetDocumentFn1790F1C2",
       "Arn"
      ]
     }
    },
    "Name": "GetDS",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "RealtimeDocAPIGetDSServiceRole1BFF7FB7",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/GetDS/Resource"
   }
  },
  "RealtimeDocAPIGetQueryResolverB85A289B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "DataSourceName": "GetDS",
    "FieldName": "getDocument",
    "Kind": "UNIT",
    "TypeName": "Query"
   },
   "DependsOn": [
    "RealtimeDocAPIGetDS96DD6147",
    "RealtimeDocAPISchema6D1E407F"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/GetQueryResolver/Resource"
   }
  },
  "RealtimeDocAPIUpdateDSServiceRoleD3F443DC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/UpdateDS/ServiceRole/Resource"
   }
  },
  "RealtimeDocAPIUpdateDSServiceRoleDefaultPolicy05A20585": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UpdateDocumentFnCC7E9870",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UpdateDocumentFnCC7E9870",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RealtimeDocAPIUpdateDSServiceRoleDefaultPolicy05A20585",
    "Roles": [
     {
      "Ref": "RealtimeDocAPIUpdateDSServiceRoleD3F443DC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/UpdateDS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RealtimeDocAPIUpdateDSAD20EA0E": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "UpdateDocumentFnCC7E9870",
       "Arn"
      ]
     }
    },
    "Name": "UpdateDS",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "RealtimeDocAPIUpdateDSServiceRoleD3F443DC",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/UpdateDS/Resource"
   }
  },
  "RealtimeDocAPIUpdateMutationResolver8A08B698": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "RealtimeDocAPIB67C1404",
      "ApiId"
     ]
    },
    "DataSourceName": "UpdateDS",
    "FieldName": "updateDocument",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "RealtimeDocAPISchema6D1E407F",
    "RealtimeDocAPIUpdateDSAD20EA0E"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/RealtimeDocAPI/UpdateMutationResolver/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetDocumentFnServiceRole0A3F9F70": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/GetDocumentFn/ServiceRole/Resource"
   }
  },
  "GetDocumentFnServiceRoleDefaultPolicy53DD4036": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsTable7E808EE5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetDocumentFnServiceRoleDefaultPolicy53DD4036",
    "Roles": [
     {
      "Ref": "GetDocumentFnServiceRole0A3F9F70"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/GetDocumentFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetDocumentFn1790F1C2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e08e35c6cbc180fd582dc3a0b4683159f47724c604bca90bcba2f5c902b6f978.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "DocumentsTable7E808EE5"
      }
     }
    },
    "Handler": "get.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetDocumentFnServiceRole0A3F9F70",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetDocumentFnServiceRoleDefaultPolicy53DD4036",
    "GetDocumentFnServiceRole0A3F9F70"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/GetDocumentFn/Resource",
    "aws:asset:path": "asset.e08e35c6cbc180fd582dc3a0b4683159f47724c604bca90bcba2f5c902b6f978",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UpdateDocumentFnServiceRoleEE0E4303": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/UpdateDocumentFn/ServiceRole/Resource"
   }
  },
  "UpdateDocumentFnServiceRoleDefaultPolicyE4218A0E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsTable7E808EE5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UpdateDocumentFnServiceRoleDefaultPolicyE4218A0E",
    "Roles": [
     {
      "Ref": "UpdateDocumentFnServiceRoleEE0E4303"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/UpdateDocumentFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UpdateDocumentFnCC7E9870": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e08e35c6cbc180fd582dc3a0b4683159f47724c604bca90bcba2f5c902b6f978.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "DocumentsTable7E808EE5"
      }
     }
    },
    "Handler": "update.handler",
    "Role": {
     "Fn::GetAtt": [
      "UpdateDocumentFnServiceRoleEE0E4303",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "UpdateDocumentFnServiceRoleDefaultPolicyE4218A0E",
    "UpdateDocumentFnServiceRoleEE0E4303"
   ],
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/UpdateDocumentFn/Resource",
    "aws:asset:path": "asset.e08e35c6cbc180fd582dc3a0b4683159f47724c604bca90bcba2f5c902b6f978",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOQU+EMBCFf8veyyhgvLOY9SBGBe+boXTZLqWtTNkNIfx30yJGT+97byYvL4H4MYV4hzeKeNNFStYwVw55x/BGx7mZNPamqWH+xFoJlp90gIWhtTRpDvPzgPb8pTIr/TW4j+K/q/hZ9OiDzMoXMbEC+7rBJ3RYmXHgofePKwUZdRWDjzdemMQe5tKsK4K+GyX55O1KC1OmJShMWwontJNGM0qPSCQcQeaFUQr7kXfC7ZEEU2EIzIdR8/Cen/TGyxKGbPt+OfRUDlupW394RWt/8G10dnSecqMbGVqYNo2AC91dkwTiB7jfXUjKaBi1k72ActVvSoseqYkBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "RealtimeDocStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "GraphQLAPIURL": {
   "Value": {
    "Fn::GetAtt": [
     "RealtimeDocAPIB67C1404",
     "GraphQLUrl"
    ]
   }
  },
  "GraphQLAPIKey": {
   "Value": {
    "Fn::GetAtt": [
     "RealtimeDocAPIDefaultApiKey6EAA451F",
     "ApiKey"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}